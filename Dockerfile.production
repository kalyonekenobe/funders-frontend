FROM node:lts-alpine AS base

ENV PNPM_HOME=/usr/local/bin

ARG NEXT_PUBLIC_BACKEND_URL
ARG NEXT_PUBLIC_FRONTEND_URL
ARG NEXT_PUBLIC_DEFAULT_PROFILE_IMAGE_PATH
ARG NEXT_PUBLIC_POST_IMAGE_PLACEHOLDER_PATH
ARG NEXT_PUBLIC_PROFILE_IMAGE_PLACEHOLDER_PATH
ARG NEXT_PUBLIC_PROFILE_BACKGROUND_PLACEHOLDER_PATH
ARG NEXT_PUBLIC_STRIPE_PUBLIC_KEY
ARG NEXT_AUTH_MESSAGE_TEMPLATE
ARG NEXT_COOKIE_ACCESS_TOKEN_NAME
ARG NEXT_COOKIE_REFRESH_TOKEN_NAME
ARG NEXT_COOKIE_OAUTH2_TOKEN_NAME
ARG NEXT_COOKIE_ACCOUNT_COMPLETION_TOKEN_NAME
ARG NEXT_JWT_SECRET
ARG NEXT_JWT_ISSUER
ARG NEXT_JWT_AUDIENCE
ARG NEXT_JWT_ACCESS_TOKEN_DURATION
ARG NEXT_JWT_REFRESH_TOKEN_DURATION
ARG NEXT_JWT_REFRESH_TOKEN_EXTENDED_DURATION

ENV NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
ENV NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL}
ENV NEXT_PUBLIC_DEFAULT_PROFILE_IMAGE_PATH=${NEXT_PUBLIC_DEFAULT_PROFILE_IMAGE_PATH}
ENV NEXT_PUBLIC_POST_IMAGE_PLACEHOLDER_PATH=${NEXT_PUBLIC_POST_IMAGE_PLACEHOLDER_PATH}
ENV NEXT_PUBLIC_PROFILE_IMAGE_PLACEHOLDER_PATH=${NEXT_PUBLIC_PROFILE_IMAGE_PLACEHOLDER_PATH}
ENV NEXT_PUBLIC_PROFILE_BACKGROUND_PLACEHOLDER_PATH=${NEXT_PUBLIC_PROFILE_BACKGROUND_PLACEHOLDER_PATH}
ENV NEXT_PUBLIC_STRIPE_PUBLIC_KEY=${NEXT_PUBLIC_STRIPE_PUBLIC_KEY}
ENV NEXT_AUTH_MESSAGE_TEMPLATE=${NEXT_AUTH_MESSAGE_TEMPLATE}
ENV NEXT_COOKIE_ACCESS_TOKEN_NAME=${NEXT_COOKIE_ACCESS_TOKEN_NAME}
ENV NEXT_COOKIE_REFRESH_TOKEN_NAME=${NEXT_COOKIE_REFRESH_TOKEN_NAME}
ENV NEXT_COOKIE_OAUTH2_TOKEN_NAME=${NEXT_COOKIE_OAUTH2_TOKEN_NAME}
ENV NEXT_COOKIE_ACCOUNT_COMPLETION_TOKEN_NAME=${NEXT_COOKIE_ACCOUNT_COMPLETION_TOKEN_NAME}
ENV NEXT_JWT_SECRET=${NEXT_JWT_SECRET}
ENV NEXT_JWT_ISSUER=${NEXT_JWT_ISSUER}
ENV NEXT_JWT_AUDIENCE=${NEXT_JWT_AUDIENCE}
ENV NEXT_JWT_ACCESS_TOKEN_DURATION=${NEXT_JWT_ACCESS_TOKEN_DURATION}
ENV NEXT_JWT_REFRESH_TOKEN_DURATION=${NEXT_JWT_REFRESH_TOKEN_DURATION}
ENV NEXT_JWT_REFRESH_TOKEN_EXTENDED_DURATION=${NEXT_JWT_REFRESH_TOKEN_EXTENDED_DURATION}

# Build stage
FROM base AS build
WORKDIR /app

RUN apk add --no-cache --virtual .gyp linux-headers python3 make g++ eudev-dev
RUN corepack enable && corepack prepare pnpm@latest --activate

COPY package*.json ./
COPY pnpm-lock.yaml ./

RUN pnpm install tiny-secp256k1 || npm install tiny-secp256k1
RUN pnpm install --frozen-lockfile || npm install --production

COPY . .

RUN pnpm run build || npm run build

RUN pnpm prune || npm prune

USER node

# Production stage 
FROM base AS production
WORKDIR /app

RUN corepack enable && corepack prepare pnpm@latest --activate

ENV NODE_ENV production

COPY --chown=node:node --from=build /app/package.json /app/pnpm-lock.yaml ./
COPY --chown=node:node --from=build /app/node_modules ./node_modules
COPY --chown=node:node --from=build /app/dist ./dist

CMD ["sh", "-c", "NODE_OPTIONS='--max-old-space-size=2048' pnpm run start"]

EXPOSE 3000
