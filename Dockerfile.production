FROM node:slim AS base

ENV PNPM_HOME=/usr/local/bin

# Build stage
FROM base AS build
WORKDIR /app

RUN apt-get update && apt-get install -y python3 make g++ && rm -rf /var/lib/apt/lists/*
RUN corepack enable && corepack prepare pnpm@latest --activate

COPY package*.json ./
COPY pnpm-lock.yaml ./

RUN pnpm install tiny-secp256k1 || npm install tiny-secp256k1
RUN pnpm install --frozen-lockfile || npm install --production

COPY . .
COPY ./env/.env.production .env

RUN pnpm run build || npm run build

RUN pnpm prune || npm prune

USER node

# Production stage 
FROM base AS production
WORKDIR /app

RUN corepack enable && corepack prepare pnpm@latest --activate

ENV NODE_ENV=production

COPY --chown=node:node --from=build /app/package.json /app/pnpm-lock.yaml ./
COPY --chown=node:node --from=build /app/node_modules ./node_modules
COPY --chown=node:node --from=build /app/public ./public
COPY --chown=node:node --from=build /app/.next ./.next
COPY --chown=node:node --from=build /app/next.config.js ./next.config.js
COPY --chown=node:node --from=build /app/env.config.ts ./env.config.ts
COPY --chown=node:node --from=build /app/next-env.d.ts ./next-env.d.ts
COPY --chown=node:node --from=build /app/middleware.ts ./middleware.ts
COPY --chown=node:node --from=build /app/postcss.config.js ./postcss.config.js
COPY --chown=node:node --from=build /app/tailwind.config.ts ./tailwind.config.ts

CMD ["sh", "-c", "NODE_OPTIONS='--max-old-space-size=2048' pnpm run start"]

EXPOSE 3000
